/**
 * üìã FireChain Logger ‚Äî v2.0.2
 * - Logs padronizados com n√≠veis, timestamps e UID opcional
 * - F√°cil integra√ß√£o com logs locais, Firebase ou servi√ßos externos (Datadog, Logtail etc.)
 */

const now = () => new Date().toISOString().replace('T', ' ').split('.')[0];

function format(label, message, uid = null) {
  const prefix = uid ? `[UID:${uid}]` : '';
  return `[${now()}] ${label} ${prefix} ${message}`;
}

export function logInfo(message, uid = null) {
  console.log(format('‚ÑπÔ∏è INFO', message, uid));
}

export function logSuccess(message, uid = null) {
  console.log(format('‚úÖ SUCESSO', message, uid));
}

export function logWarn(message, uid = null) {
  console.warn(format('‚ö†Ô∏è AVISO', message, uid));
}

export function logError(message, uid = null) {
  console.error(format('‚ùå ERRO', message, uid));
}

export function logDebug(message, uid = null) {
  if (process.env.NODE_ENV !== 'production') {
    console.debug(format('üêû DEBUG', message, uid));
  }
}
